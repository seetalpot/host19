%!PS-Adobe-3.0 EPSF-3.0
%%Title: s27_after_scanunroll.eps
%%Creator: XCircuit v3.9 rev73
%%CreationDate: Mon Aug 13 11:53:37 2018
%%Pages: 1
%%BoundingBox: 68 68 1301 1295
%%DocumentNeededResources: font Helvetica Helvetica-Bold Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.9
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--4/12/16  (tim@opencircuitdesign.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%  Open Circuit Design (2012-2016)
%
%%BeginResource: procset XCIRCproc 3.9 1
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } if } def
/ol { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CRx { } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto CRx } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 128 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def
	/numlines 0 def /padding 0 array def /Tabs 0 array def
	/fscale 1.0 def /kY 0 def gsave /CRx { linewid padding
	aload pop numlines 1 add dup /numlines exch def array astore
	/padding exch def /linewid 0 def } def dup 1 add copy dup 1 0
	dtransform exch atan rotate {exch dup type /stringtype eq {gsave dup
	gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop exch
	pop exch pop grestore currentpoint pop add dup /linewid exch def twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat
	CRx /CRx {padding aload pop just 1280 and 0 gt {blockwid exch sub just
	1024 and 0 gt {0.5 mul} if} {pop 0} ifelse 0 rmoveto numlines 1 sub
	dup /numlines exch def array astore /padding exch def} def exch pop
	pathbbox grestore 4 copy pop exch pop exch sub /blockwid exch def
	3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def CRx {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog
% XCircuit output starts here.

%%BeginSetup

/digital::invert {
% trivial
begingate
0 1.000 -32 -40 -32 40 40 0 3 polygon
1 1.000 48 0 8 0.000 360.000 xcarc
1 1.000 -32 0 -48 0 2 polygon
1 1.000 56 0 64 0 2 polygon
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0.000 1.000 64 0 pinlabel
(In) {/Times-Roman cf} 2 7 0.000 1.000 -48 0 pinlabel
endgate
} def

/digital::and {
% trivial
begingate
1 1.000 0 -48 -64 -48 -64 48 0 48 4 polygon
1 1.000 0 0 48 -90.000 90.000 xcarc
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0.000 1.000 48 0 pinlabel
(In.1) {/Times-Roman cf} 2 7 0.000 1.000 -64 32 pinlabel
(In.2) {/Times-Roman cf} 2 7 0.000 1.000 -64 -32 pinlabel
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 -0.000 1.000 0 0 pinlabel
endgate
} def

/digital::nor {
% trivial
begingate
1 1.000 -64 48 -35 48 2 polygon
1 1.000 -64 -48 -35 -48 2 polygon
1 1.000 -128 0 80 -37.000 37.000 xcarc
1 1.000 56 0 8 0.000 360.000 xcarc
1 1.000 -35 -48 96 30.000 90.000 xcarc
1 1.000 -35 48 96 270.000 330.000 xcarc
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0.000 1.000 64 0 pinlabel
(In.1) {/Times-Roman cf} 2 7 0.000 1.000 -56 32 pinlabel
(In.2) {/Times-Roman cf} 2 7 0.000 1.000 -56 -32 pinlabel
endgate
} def

/digital::or {
% trivial
begingate
1 1.000 -19 -48 96 30.000 90.000 xcarc
1 1.000 -19 48 96 270.000 330.000 xcarc
1 1.000 -112 0 80 -37.000 37.000 xcarc
1 1.000 -48 48 -19 48 2 polygon
1 1.000 -48 -48 -19 -48 2 polygon
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0.000 1.000 64 0 pinlabel
(In.1) {/Times-Roman cf} 2 7 0.000 1.000 -40 32 pinlabel
(In.2) {/Times-Roman cf} 2 7 0.000 1.000 -40 -32 pinlabel
endgate
} def

/digital::nand {
% trivial
begingate
1 1.000 0 -48 -64 -48 -64 48 0 48 4 polygon
1 1.000 56 0 8 0.000 360.000 xcarc
1 1.000 0 0 48 -90.000 90.000 xcarc
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0.000 1.000 64 0 pinlabel
(In.1) {/Times-Roman cf} 2 7 0.000 1.000 -64 32 pinlabel
(In.2) {/Times-Roman cf} 2 7 0.000 1.000 -64 -32 pinlabel
endgate
} def

/generic::jumper {
% trivial
begingate
1 1.000 0 0 10 -90.000 90.000 xcarc
1 1.000 0 10 0 16 2 polygon
1 1.000 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 -0.000 1.000 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 -0.000 1.000 0 -16 pinlabel
endgate
} def

/generic::circle {
% trivial
begingate
1 1.000 16 0 6 0.000 360.000 xcarc
1 1.000 0 0 10 0 2 polygon
1.000 0.000 0.000 scb
(out) {/Times-Roman cf} 2 4 -0.000 1.000 16 0 pinlabel
(out) {/Times-Roman cf} 2 7 -0.000 1.000 0 0 pinlabel
endgate
} def

/digital::xor {
% trivial
begingate
1 1.000 -19 -48 96 30.000 90.000 xcarc
1 1.000 -19 48 96 270.000 330.000 xcarc
1 1.000 -128 0 80 -37.000 37.000 xcarc
1 1.000 -112 0 80 -37.000 37.000 xcarc
1 1.000 -48 48 -19 48 2 polygon
1 1.000 -48 -48 -19 -48 2 polygon
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0.000 1.000 64 0 pinlabel
(In.1) {/Times-Roman cf} 2 7 0.000 1.000 -56 32 pinlabel
(In.2) {/Times-Roman cf} 2 7 0.000 1.000 -56 -32 pinlabel
endgate
} def


%%EndSetup

%%Page: s27 1
%%PageOrientation: Portrait
/pgsave save def bop
1.0000 inchscale
2.6000 setlinewidth 1520 2601 translate

1.000 0.000 0.000 scb
(0) {ss} (G) {/Helvetica-Bold cf} 4 16 0.000 1.000 -1280 784 label
0.000 0.000 1.000 scb
1.000 0.000 -128 800 digital::invert
sce
(14) {ss} (G) {/Helvetica cf} 4 16 0.000 1.000 -64 816 label
(5) {ss} (G) {/Helvetica cf} 4 16 0.000 1.000 1040 -1328 label
1 2.000 112 -1280 176 -1280 2 polygon
(6) {ss} (G) {/Helvetica cf} 4 16 0.000 1.000 144 -1328 label
1.000 0.000 0.000 scb
(1) {ss} (G) {/Helvetica-Bold cf} 4 16 0.000 1.000 -1264 -688 label
sce
1 1.000 -208 -672 224 -672 2 polygon
1 1.000 336 -640 400 -640 2 polygon
(12) {ss} (G) {/Helvetica cf} 4 16 0.000 1.000 352 -688 label
1 1.000 576 -800 640 -800 2 polygon
(13) {ss} (G) {/Helvetica cf} 4 16 0.000 1.000 608 -848 label
1 1.000 400 -640 432 -640 432 -768 464 -768 4 polygon
1.000 0.000 0.000 scb
(2) {ss} (G) {/Helvetica-Bold cf} 4 16 0.000 1.000 -1264 -848 label
sce
1 1.000 464 -832 -208 -832 2 polygon
1 1.000 -224 624 208 624 2 polygon
(9) {ss} (G) {/Helvetica cf} 4 16 0.000 1.000 -272 592 label
1 1.000 1408 768 1472 768 2 polygon
(10) {ss} (G) {/Helvetica cf} 4 16 0.000 1.000 1440 720 label
1 1.000 -64 800 400 800 2 polygon
1 1.000 1216 592 1264 592 1264 736 1296 736 4 polygon
0.000 0.000 1.000 scb
1.000 0.000 1392 352 digital::invert
sce
1 1.000 1264 592 1264 368 1264 352 1360 352 4 polygon
1.000 0.000 0.000 scb
(17) {ss} (G) {/Helvetica-Bold cf} 4 16 0.000 1.000 1888 336 label
sce
1 1.000 1440 352 1872 352 2 polygon
0.000 0.000 1.000 scb
1.000 0.000 464 48 digital::and
sce
1 1.000 512 48 576 48 2 polygon
(8) {ss} (G) {/Helvetica cf} 4 16 0.000 1.000 544 0 label
1 1.000 576 48 608 48 608 -80 640 -80 4 polygon
1 1.000 784 224 848 224 2 polygon
1.000 0.000 0.000 scb
(3) {ss} (G) {/Helvetica-Bold cf} 4 16 0.000 1.000 -1264 240 label
sce
(16) {ss} (G) {/Helvetica cf} 4 16 0.000 1.000 816 160 label
1 1.000 176 640 176 800 2 polygon
1 1.000 176 544 176 80 400 80 3 polygon
1.000 0.000 176 800 generic::dot
0.000 0.000 1.000 scb
1.000 0.000 272 -640 digital::nor
1.000 0.000 512 -800 digital::nor
1.000 0.000 1152 592 digital::nor
1.000 0.000 1344 768 digital::nor
1.000 0.000 720 224 digital::or
sce
1 1.000 368 256 688 256 2 polygon
1 1.000 608 48 608 192 688 192 3 polygon
0.000 0.000 1.000 scb
1.000 0.000 720 -112 digital::or
sce
1 1.000 784 -112 848 -112 2 polygon
1 1.000 640 -80 688 -80 2 polygon
1 1.000 432 -640 432 -144 688 -144 3 polygon
(15) {ss} (G) {/Helvetica cf} 4 16 0.000 1.000 800 -176 label
0.000 0.000 1.000 scb
1.000 90.000 912 -288 digital::nand
sce
1 1.000 848 -112 896 -112 896 -224 3 polygon
1 1.000 848 224 928 224 928 -224 3 polygon
1 1.000 912 -352 912 -560 448 -560 3 polygon
1.000 90.000 432 -560 generic::jumper
1 1.000 160 -560 -400 -560 -400 624 -208 624 4 polygon
1.000 0.000 1264 352 generic::dot
1 1.000 640 -800 816 -800 816 -928 -1088 -928 -1088 -1296 5 polygon
1 1.000 -48 -848 -48 -912 2 polygon
1 1.000 416 -560 144 -560 2 polygon
1 1.000 176 672 176 512 2 polygon
1 1.000 -48 -848 -48 -608 208 -608 3 polygon
1 1.000 -736 -1280 -736 -992 -48 -992 3 polygon
1 1.000 -48 -992 -48 -880 2 polygon
1 1.000 176 -1280 176 16 2 polygon
1 1.000 176 16 400 16 2 polygon
1 1.000 400 800 1296 800 2 polygon
1 1.000 192 624 1104 624 2 polygon
(11) {ss} (G) {/Helvetica cf} 4 16 0.000 1.000 1296 576 label
1 1.000 1456 768 1552 768 1552 -1184 480 -1184 480 -1296 5 polygon
1 1.000 -208 -672 -1216 -672 2 polygon
1 1.000 -208 -832 -1216 -832 2 polygon
1 1.000 368 256 -1216 256 2 polygon
1 1.000 -176 800 -1232 800 2 polygon
1.000 0.000 0.000 scb
(0) {ss} (K) {/Helvetica-Bold cf} 4 16 0.000 1.000 -736 -1568 label
sce
1 1.000 96 -1280 112 -1280 2 polygon
1 1.000 1008 -1280 1024 -1280 2 polygon
1 1.000 1104 576 1056 576 1056 -1280 1008 -1280 4 polygon
0.000 0.000 1.000 scb
1.000 90.000 -720 -1504 generic::circle
sce
1 1.000 1264 368 1264 -1072 1264 -1088 -240 -1088 -240 -1296 5 polygon
1.000 90.000 -1120 -1360 digital::xor
1.000 0.000 0.000 scb
(0) {ss} (K) {/Helvetica-Bold cf} 4 16 0.000 1.000 -1264 -1136 label
sce
1.000 165.000 -1184 -1120 generic::circle
1 1.000 -1184 -1120 -1136 -1120 -1136 -1296 3 polygon
1.000 0.000 0.000 scb
(1) {ss} (K) {/Helvetica-Bold cf} 4 16 0.000 1.000 -1296 -1520 label
sce
1 1.000 -1216 -1504 -1168 -1504 -1168 -1680 3 polygon
1.000 165.000 -1216 -1504 generic::circle
1.000 90.000 -1152 -1744 digital::xor
1 1.000 -1120 -1424 -1120 -1696 2 polygon
1.000 0.000 0.000 scb
(2) {ss} (K) {/Helvetica-Bold cf} 4 16 0.000 1.000 -1328 -1872 label
sce
1 1.000 -1248 -1856 -1200 -1856 -1200 -2032 3 polygon
1.000 165.000 -1248 -1856 generic::circle
1.000 90.000 -1184 -2096 digital::xor
1 1.000 -1152 -1808 -1152 -2048 2 polygon
1.000 0.000 0.000 scb
(1) {ss} (K) {/Helvetica-Bold cf} 4 16 0.000 1.000 -416 -1200 label
sce
1 1.000 -336 -1184 -288 -1184 -288 -1360 3 polygon
1.000 165.000 -336 -1184 generic::circle
1.000 90.000 -272 -1424 digital::xor
1 1.000 -240 -1104 -240 -1376 2 polygon
1.000 0.000 0.000 scb
(2) {ss} (K) {/Helvetica-Bold cf} 4 16 0.000 1.000 -448 -1552 label
sce
1 1.000 -368 -1536 -320 -1536 -320 -1712 3 polygon
1.000 165.000 -368 -1536 generic::circle
1.000 90.000 -304 -1776 digital::xor
1 1.000 -272 -1488 -272 -1728 2 polygon
1 1.000 384 -1184 432 -1184 432 -1360 3 polygon
1.000 90.000 448 -1424 digital::xor
1.000 0.000 0.000 scb
(2) {ss} (K) {/Helvetica-Bold cf} 4 16 0.000 1.000 304 -1200 label
sce
1.000 165.000 384 -1184 generic::circle
1 1.000 480 -1280 480 -1360 2 polygon
1 1.000 -1184 -2160 -1184 -2336 2 polygon
1 1.000 -304 -1840 -304 -2336 2 polygon
1 1.000 448 -1488 448 -2320 2 polygon
1.000 0.000 0.000 scb
(SI) {/Helvetica-Bold cf} 2 16 0.000 1.000 -800 -1568 label
sce
1.000 270.000 -736 -1344 digital::xor
1 1.000 -720 -1504 -720 -1392 2 polygon
1 1.000 -768 -1520 -768 -1392 2 polygon
1.000 0.000 0.000 scb
(0) {ss} (K) {/Helvetica-Bold cf} 4 16 0.000 1.000 128 -1904 label
0.000 0.000 1.000 scb
1.000 90.000 144 -1840 generic::circle
1.000 0.000 0.000 scb
(SI) {/Helvetica-Bold cf} 2 16 0.000 1.000 64 -1904 label
sce
1.000 270.000 128 -1680 digital::xor
1 1.000 144 -1840 144 -1728 2 polygon
1 1.000 96 -1856 96 -1728 2 polygon
1.000 270.000 96 -1392 digital::xor
1 1.000 96 -1328 96 -1280 2 polygon
1 1.000 128 -1616 128 -1440 2 polygon
1 1.000 64 -1552 64 -1440 2 polygon
1.000 0.000 0.000 scb
(1) {ss} (K) {/Helvetica-Bold cf} 4 16 0.000 1.000 0 -1600 label
0.000 0.000 1.000 scb
1.000 90.000 64 -1552 generic::circle
1.000 0.000 0.000 scb
(0) {ss} (K) {/Helvetica-Bold cf} 4 16 0.000 1.000 992 -2160 label
0.000 0.000 1.000 scb
1.000 90.000 1008 -2096 generic::circle
1.000 0.000 0.000 scb
(SI) {/Helvetica-Bold cf} 2 16 0.000 1.000 928 -2160 label
sce
1.000 270.000 992 -1936 digital::xor
1 1.000 1008 -2096 1008 -1984 2 polygon
1 1.000 960 -2112 960 -1984 2 polygon
1.000 270.000 960 -1648 digital::xor
1 1.000 992 -1872 992 -1696 2 polygon
1 1.000 928 -1808 928 -1696 2 polygon
1.000 0.000 0.000 scb
(1) {ss} (K) {/Helvetica-Bold cf} 4 16 0.000 1.000 864 -1856 label
0.000 0.000 1.000 scb
1.000 90.000 928 -1808 generic::circle
sce
1.000 270.000 928 -1408 digital::xor
1 1.000 928 -1344 928 -1280 1024 -1280 3 polygon
1 1.000 960 -1584 960 -1472 2 polygon
1.000 0.000 0.000 scb
(2) {ss} (K) {/Helvetica-Bold cf} 4 16 0.000 1.000 832 -1632 label
0.000 0.000 1.000 scb
1.000 90.000 896 -1584 generic::circle
sce
1 1.000 896 -1584 896 -1472 2 polygon
(7) {ss} (G) {/Helvetica cf} 4 16 0.000 1.000 -704 -1248 label
(\)) {ns} (13) {ss} (PPO\(G) {/Helvetica-Bold cf} 6 16 0.000 1.000 -1200 -2400 
label
(\)) {ns} (11) {ss} (PPO\(G) {/Helvetica-Bold cf} 6 16 0.000 1.000 -384 -2384 
label
(\)) {ns} (10) {ss} (PPO\(G) {/Helvetica-Bold cf} 6 16 0.000 1.000 400 -2384 
label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
